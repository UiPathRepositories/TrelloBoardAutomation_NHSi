<Activity mc:Ignorable="sap sap2010" x:Class="GetAssets" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_StrClientId" Type="OutArgument(x:String)" />
    <x:Property Name="out_StrClientSecret" Type="OutArgument(x:String)" />
    <x:Property Name="out_StrSubscriptionId" Type="OutArgument(x:String)" />
    <x:Property Name="out_StrTenantId" Type="OutArgument(x:String)" />
    <x:Property Name="out_StrKeyVaultName" Type="OutArgument(x:String)" />
    <x:Property Name="in_StrClientIdCredentialName" Type="InArgument(x:String)" />
    <x:Property Name="in_StrClientSecretCredentialName" Type="InArgument(x:String)" />
    <x:Property Name="in_StrSubscriptionIdCredentialName" Type="InArgument(x:String)" />
    <x:Property Name="in_StrTenantIdCredentialName" Type="InArgument(x:String)" />
    <x:Property Name="in_StrKeyVaultCredentialName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>324,922</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetAssets_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="44">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="17">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Security.SecureString</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetAssets" sap:VirtualizedContainerService.HintSize="304,862" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strKeyVaultUsername" />
      <Variable x:TypeArguments="ss:SecureString" Name="sstrKeyVaultPassword" />
      <Variable x:TypeArguments="x:String" Name="strClientSecretUsername" />
      <Variable x:TypeArguments="ss:SecureString" Name="sstrClientSecretPassword" />
      <Variable x:TypeArguments="ss:SecureString" Name="sstrClientIdPassword" />
      <Variable x:TypeArguments="x:String" Name="strClientIdUsername" />
      <Variable x:TypeArguments="ss:SecureString" Name="sstrSubscriptionIdPassword" />
      <Variable x:TypeArguments="x:String" Name="strSubscriptionIdUsername" />
      <Variable x:TypeArguments="x:String" Name="strTenantIdUsername" />
      <Variable x:TypeArguments="ss:SecureString" Name="sstrTenantIdPassword" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[in_StrKeyVaultCredentialName]" DisplayName="Get KeyVault_Credential" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[sstrKeyVaultPassword]" Username="[strKeyVaultUsername]" />
    <Assign DisplayName="Assign KeyVault" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_StrKeyVaultName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, sstrKeyVaultPassword).Password]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[in_StrClientSecretCredentialName]" DisplayName="Get ClientSecret_Credential" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[sstrClientSecretPassword]" Username="[strClientSecretUsername]" />
    <Assign DisplayName="Assign ClientSecret" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_StrClientSecret]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, sstrClientSecretPassword).Password]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[in_StrClientIdCredentialName]" DisplayName="Get ClientId_Credential" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="GetRobotCredential_3" Password="[sstrClientIdPassword]" Username="[strClientIdUsername]" />
    <Assign DisplayName="Assign ClientId" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_StrClientId]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, sstrClientIdPassword).Password]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[in_StrSubscriptionIdCredentialName]" DisplayName="Get SubscriptionId_Credential" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="GetRobotCredential_4" Password="[sstrSubscriptionIdPassword]" Username="[strSubscriptionIdUsername]" />
    <Assign DisplayName="Assign SubscriptionId" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_StrSubscriptionId]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, sstrSubscriptionIdPassword).Password]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[in_StrTenantIdCredentialName]" DisplayName="Get TenantId_Credential" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="GetRobotCredential_5" Password="[sstrTenantIdPassword]" Username="[strTenantIdUsername]" />
    <Assign DisplayName="Assign TenantId" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_StrTenantId]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, sstrTenantIdPassword).Password]</InArgument>
      </Assign.Value>
    </Assign>
  </Sequence>
</Activity>